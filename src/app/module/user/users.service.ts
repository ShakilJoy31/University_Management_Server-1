import { User } from './users.model';
import { IUser } from './user.schema'
import { generateFacultyId } from './user.utils';
import config from '../../../config/index';
import ApiError from '../../../errors/ApiErrors';
const createUser = async (user: IUser):Promise<IUser | null> => {
    // Autogenerated incremental id
    // const academicSemester = {
    //     code: '02',
    //     year: '2025',
    // }
    const id = await generateFacultyId();
    user.id = id;

    // Default Password
    if(!user.password){
        user.password = config.default_student_password as string;
    }

    const createdUser = await User.create(user);
    if(!createdUser){
        throw new ApiError(400, 'Failed to create user');
    }
    return createdUser;
}

export default {
    createUser
}